openapi: 3.0.0
info:
  title: CRM API Documentation
  description: API documentation for the CRM backend.
  version: 1.0.0
servers:
  - url: http://localhost:{port}
    variables:
      port:
        default: 3000
paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
        '400':
          description: Validation error
        '500':
          description: Server error
  /auth/login:
    post:
      summary: Authenticate user and return a token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Validation error
        '404':
          description: User not found
        '401':
          description: Invalid password
        '500':
          description: Server error
  /customers:
    post:
      summary: Create a new customer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                phone:
                  type: string
                name:
                  type: string
              required:
                - email
                - phone
      responses:
        '201':
          description: Customer created successfully
        '400':
          description: Validation error
        '500':
          description: Server error
    get:
      summary: Get all customers
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '500':
          description: Server error
  /customers/{id}:
    get:
      summary: Get a customer by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer details
        '404':
          description: Customer not found
        '500':
          description: Server error
    put:
      summary: Update a customer by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                phone:
                  type: string
                name:
                  type: string
      responses:
        '200':
          description: Customer updated successfully
        '404':
          description: Customer not found
        '500':
          description: Server error
    delete:
      summary: Delete a customer by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer deleted successfully
        '404':
          description: Customer not found
        '500':
          description: Server error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
